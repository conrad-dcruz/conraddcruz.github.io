{"version":3,"sources":["components/Footer.jsx","components/Work.jsx","components/About.jsx","components/Navbar.jsx","components/Project.jsx","components/NavRouter.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","className","style","textAlign","justifySelf","alignSelf","src","Work","state","largeProjects","smallProjects","fetch","siteData","json","response","projects","i","length","thisProj","size","push","this","setState","project","react_router_dom","to","id","href","key","title","_this2","map","renderProject","components_Footer","Component","About","aboutSubtitle","educationList","aboutResponse","aboutData","subtitle","education","workList","work","awardList","awards","uniLogo","heading","content","date","award","console","log","class","width","renderEducation","renderWork","renderAwards","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Project","spreadImgList","projectHeading","projectSubheading","projectDate","projectTags","projectId","props","match","params","projectDir","join","projectImgDir","projectSpreadImgDir","projectDataResp","projectData","spread","spreadList","filename","thumb","name","category","tags","description","padding","tag","renderAward","paddingTop","alt","NavRouter","components_Navbar","react_router","path","exact","component","App","components_NavRouter","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.528f5590.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"container footer-container\" style={{\r\n            textAlign: 'center'\r\n        }}>\r\n            {/* <!-- <p class=\"float-right\">\r\n        <a href=\"#\">Back to top</a>\r\n      </p> --> */}\r\n            <img className=\"site-logo\" style={{ justifySelf: 'center', alignSelf: 'center', textAlign: 'center' }} src=\"/img/icons/site-logo.png\" />\r\n            <br />\r\n            <br />\r\n            <p className=\"copyright\">© Copyright 2019 · Conrad D'Cruz</p>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass Work extends Component {\r\n    state = {\r\n        largeProjects: [],\r\n        smallProjects: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const siteData = await fetch('site-data/index.json')\r\n        const response = await siteData.json();\r\n        const projects = response.projects;\r\n        let largeProjects = [];\r\n        let smallProjects = [];\r\n        for (var i = 0; i < projects.length; i++) {\r\n            const thisProj = projects[i];\r\n            thisProj.size === \"large\" ? largeProjects.push(thisProj) : smallProjects.push(thisProj);\r\n        }\r\n        this.setState({\r\n            largeProjects: largeProjects,\r\n            smallProjects: smallProjects\r\n        })\r\n\r\n    }\r\n\r\n    renderProject(project) {\r\n        return (\r\n            <Link to={\"/projects/\" + project.id} className=\"btn\" href=\"#\" key={project.id}>\r\n                <div className=\"card album-card\">\r\n                    <img className=\"card-img\" src={\"/site-data/projects/\" + project.id + \"/img/thumbnail.png\"} />\r\n                    <div className=\"container\">\r\n                        <p className=\"card-caption\">{project.title}</p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container album-container\" id=\"album\">\r\n                <div className='row container-with-top-padding'>\r\n                    <div className=\"col-md-7 col-12 tile-horizontal-spacing\" id=\"tileGridColLarge\">\r\n                        {this.state.largeProjects.map((project) => this.renderProject(project))}\r\n                    </div>\r\n                    <div className=\"col-md-5 col-12 tile-horizontal-spacing\" id=\"tileGridColSmall\">\r\n                        {this.state.smallProjects.map((project) => this.renderProject(project))}\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Work;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    state = {\r\n        aboutSubtitle: '',\r\n        educationList: [],\r\n        educationList: [],\r\n        workList: [],\r\n        awardList: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const aboutResponse = await fetch('site-data/about/about.json');\r\n        const aboutData = await aboutResponse.json();\r\n\r\n        this.setState({\r\n            aboutSubtitle: aboutData.title.subtitle,\r\n            educationList: aboutData.education,\r\n            workList: aboutData.work,\r\n            awardList: aboutData.awards\r\n        })\r\n\r\n    }\r\n\r\n    renderEducation(education) {\r\n        return ([\r\n            <div className=\"col-md-4 col-4 uni-logo-div\">\r\n                <img className=\"uni-logo\" src={education.uniLogo} />\r\n            </div>, // <-notice the comma \r\n            <div className=\"col-md-8 col-8 div-no-left-padding div-bottom-margin-edu\">\r\n                <p className=\"about-red-heading\">{education.heading}</p>\r\n                <p className=\"about-content\">{education.content}</p>\r\n                <p className=\"about-gray-text\">{education.date}</p>\r\n            </div>\r\n\r\n        ])\r\n\r\n    }\r\n\r\n    renderWork(work) {\r\n        return (\r\n            [\r\n                <div className=\"col-md-4 col-4\">\r\n                </div>,\r\n                <div className=\"col-md-8 col-8 div-no-left-padding div-bottom-margin-work\">\r\n                    <p className=\"about-red-heading\">{work.heading}</p>\r\n                    <p className=\"about-content\">{work.content}</p>\r\n                </div>\r\n            ]\r\n        )\r\n    }\r\n\r\n    renderAwards(award) {\r\n        console.log(award);\r\n        return (\r\n            <div className=\"col-md-12 col-12 div-no-left-padding div-bottom-margin-awards\">\r\n                <p className=\"about-red-heading\">{award.heading}</p>\r\n                <p class=\"about-content\">{award.content}</p>\r\n                <p class=\"about-gray-text\">{award.date}</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid bg-white\" id=\"about-page\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"container about-container\">\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-md-4 col-12\" style={{ textAlign: 'center' }}>\r\n                                <img className=\"about-avatar\" src=\"site-data/about/avatar.png\" />\r\n                            </div>\r\n                            <div className=\"col-md-8 col-12\">\r\n                                <div className=\"row\">\r\n                                    <img src=\"site-data/about/hi.svg\" style={{ width: '100%' }} />\r\n                                </div>\r\n                                <div className=\"row about-subtitle-spacing\">\r\n                                    <p className=\"about-subtitle\" id=\"subtitle\">{this.state.aboutSubtitle}</p>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 col-4\">\r\n                            </div>\r\n                            <div className=\"col-md-8 col-8 dotted-border-box-upper\">\r\n                            </div>\r\n                            <div className=\"col-md-4 col-4\">\r\n                            </div>\r\n                            <div className=\"col-md-8 col-8 div-no-left-padding\">\r\n                                <row>\r\n                                    <p className=\"about-heading\">Education</p>\r\n                                </row>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\" id=\"education-root\">\r\n                            {this.state.educationList.map((education) => {\r\n                                return this.renderEducation(education)\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 col-4\">\r\n                            </div>\r\n                            <div className=\"col-md-8 col-8 div-no-left-padding dotted-border-left\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 col-4\">\r\n                            </div>\r\n                            <div className=\"col-md-8 col-8 div-no-left-padding\">\r\n                                <p className=\"about-heading\">Work</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" id=\"work-root\">\r\n                            {this.state.workList.map((work) => {\r\n                                return this.renderWork(work)\r\n                            })\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 col-4 hide-on-mobile\">\r\n                                <img src=\"site-data/about/curve.svg\" />\r\n                            </div>\r\n                            <div className=\"col-md-8 col-4 mobile-list-sep\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid\">\r\n                    <img className=\"award-img\" src=\"site-data/about/img/tsidc.jpg\" />\r\n                </div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"container about-container-awards\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 dotted-border-left\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 div-no-left-padding\">\r\n                                <p className=\"about-heading\">Awards and Recognition</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" id=\"awards-root\">\r\n                            {this.state.awardList.map((award) => {\r\n                                return this.renderAwards(award)\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid translucent\">\r\n                <nav className=\"navbar navbar-expand-md navbar-light fixed-top translucent nav-container-spacing\">\r\n                    <div className=\"container\">\r\n                        <div className=\"navbar-brand\" href=\"#\">\r\n\r\n                            <Link className=\"navbar-brand\" to=\"/\"><img className=\"site-logo\" src=\"/img/icons/site-logo.png\" /></Link>\r\n                                \r\n                            <Link className=\"navbar-brand portfolio-title\" to=\"/\">CONRAD D'CRUZ</Link>\r\n                            {/* <a className=\"navbar-brand designation\">Industrial Designer</a> */}\r\n                        </div>\r\n                        <button className=\"navbar-toggler toggle-button\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\r\n                            aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                            </ul>\r\n                            <ul className=\"navbar-nav navbar-right \">\r\n                                <li className=\"nav-item active\">\r\n                                    <Link className=\"nav-link\" to=\"/\">Work</Link>\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport Footer from './Footer';\r\n\r\nclass Project extends Component {\r\n    state = {\r\n        spreadImgList: [],\r\n        projectHeading: '',\r\n        projectSubheading: '',\r\n        projectDate: '',\r\n        projectTags: [],\r\n        awards: []\r\n\r\n    }\r\n    async componentDidMount() {\r\n        const projectId = this.props.match.params.id\r\n        const siteDataDir = '/site-data/projects'\r\n        const projectDir = [siteDataDir, projectId].join('/')\r\n        const projectImgDir = [projectDir, 'img'].join('/')\r\n        const projectSpreadImgDir = [projectImgDir, 'spread'].join('/')\r\n        const projectDataResp = await fetch(projectDir + \"/data.json\");\r\n        const projectData = await projectDataResp.json();\r\n\r\n        let spreadImgList = projectData.spread.spreadList;\r\n        spreadImgList = spreadImgList.map((content) => {\r\n            if (content.type === 'img') {\r\n                content.filename = [projectSpreadImgDir, content.filename].join('/');\r\n            }\r\n            return content;\r\n        })\r\n\r\n        let awards = projectData.spread.awards;\r\n        awards = awards.map((award) => {\r\n            award.thumb = [projectImgDir, 'awards', award.thumb].join('/');\r\n            return award;\r\n        });\r\n\r\n        this.setState({\r\n            spreadImgList: spreadImgList,\r\n            projectHeading: projectData.spread.name,\r\n            projectSubheading: projectData.spread.category,\r\n            projectDate: projectData.spread.date,\r\n            projectTags: projectData.spread.tags,\r\n            awards: awards\r\n        })\r\n    }\r\n\r\n    renderAward(award) {\r\n        return (\r\n            <div className=\"row award-row\" key={award.thumb}>\r\n                <div className=\"col-md-2 col-2 no-horizontal-padding\">\r\n                    <img src={award.thumb} className=\"award-thumb-img\" />\r\n                </div>\r\n                <div className=\"col-md-10 col-10\">\r\n                    <p>{award.description}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid bg-grey\" id=\"spread-page\">\r\n                    <div className=\"container-fluid grey-spread-seperator-top\">\r\n                    </div>\r\n                    <div className=\"container-fluid bg-white shadow\">\r\n                        <div className=\"container container-spread-heading\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-7\">\r\n                                    <div className=\"row-md-12\">\r\n                                        <p id=\"spread-project-heading\" className=\"spread-project-heading\">{this.state.projectHeading}</p>\r\n                                    </div>\r\n                                    <div className=\"row-md-12\">\r\n                                        <p id=\"spread-project-subheading\" className=\"spread-project-subheading\">{this.state.projectSubheading}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"row-md-12\">\r\n                                        <p id=\"project-date\" className=\"project-date\">{this.state.projectDate}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-7 \">\r\n                                    <div className=\"row-md-12\">\r\n                                        <ul id=\"spread-tags\" className=\"taglist\" style={{ padding: '0px' }}>\r\n                                            {this.state.projectTags.map((tag) => {\r\n                                                return (\r\n                                                    <li key={tag}>\r\n                                                        <span className=\"spread-tag\">{tag}</span>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"container\" id=\"awards-list-root\"></div>\r\n                                    {this.state.awards.map((award) => {\r\n                                        return this.renderAward(award)\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\" id=\"spread-list-root\" style={{ paddingTop: '10px' }}>\r\n                        {this.state.spreadImgList.map((content) => {\r\n                            if (content.type === 'img') {\r\n                                return (<img className=\"spread-img shadow\" alt=\"\" src={content.filename} key={content.filename}></img>)\r\n                            }\r\n                            else{\r\n                                return\r\n                            }\r\n                        })}\r\n                    </div>\r\n                    <Footer />\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Project;","\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Work from \"./Work\";\r\nimport About from \"./About\";\r\nimport Navbar from \"./Navbar\";\r\nimport Project from \"./Project\";\r\n\r\nclass NavRouter extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Navbar />\r\n                    <Route path=\"/\" exact component={Work} />\r\n                    <Route path=\"/about/\" component={About} />\r\n                    <Route\r\n                        path=\"/projects/:id\"\r\n                        component={Project}\r\n                    />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavRouter;\r\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/album.css';\nimport './css/about.css';\n\nimport NavRouter from './components/NavRouter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}